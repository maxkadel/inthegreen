version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Ruby orb documentation here: https://circleci.com/developer/orbs/orb/circleci/ruby
  ruby: circleci/ruby@2.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.3
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/install-deps
  lint:
    docker:
      - image: cimg/ruby:3.3
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  test:
    docker:
      - image: cimg/ruby:3.3
      - environment:
          POSTGRES_DB: inthegreen_test
          POSTGRES_PASSWORD: example
          POSTGRES_USER: inthegreen_db_user
        image: cimg/postgres:16.2
    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      # PGHOST: 127.0.0.1
      # PGPASSWORD: example
      # PGUSER: inthegreen_db_user
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          command: bundle exec rails db:schema:load --trace
          name: Database setup
      - ruby/rspec-test:
          include: spec/**/*_spec.rb

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_and_test:
    jobs:
      - build
      - lint:
          requires:
          - build
      - test:
          requires:
          - build
